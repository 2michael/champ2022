
&НаСервере
Процедура ПроставитьЗависимостиЭтапов()
	
	Для каждого СтрокаСоставаТипов Из Объект.СоставТипа Цикл
	   СтрокаСоставаТипов.ЭтапыПредшественники.Очистить();	
	КонецЦикла;
	
	Для каждого СтрокаЗависимостейЭтапов Из Объект.ЗависимостиЭтапов Цикл
		
		СтрокиЗависимыхЭтаповВСоставе = Объект.СоставТипа.НайтиСтроки(Новый Структура("ЭтапПроекта",СтрокаЗависимостейЭтапов.ЗависимыйЭтап));
		
		Для каждого НайденнаяСтрокаСостава Из СтрокиЗависимыхЭтаповВСоставе Цикл

			НайденнаяСтрокаСостава.ЭтапыПредшественники.Добавить(СтрокаЗависимостейЭтапов.Этап);
		
		КонецЦикла;
	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗависимостиЭтаповПриИзменении(Элемент)
	ПроставитьЗависимостиЭтапов();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПроставитьЗависимостиЭтапов();
КонецПроцедуры

&НаКлиенте
Процедура ЗависимостиЭтаповПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если НЕ ОтменаРедактирования Тогда
		
		МассивНайденныхСтрок = Объект.ЗависимостиЭтапов.НайтиСтроки(Новый Структура("Этап,ЗависимыйЭтап",Элемент.ТекущиеДанные.ЗависимыйЭтап,Элемент.ТекущиеДанные.Этап));
		
		Если МассивНайденныхСтрок.Количество() Тогда 
			Сообщить("Зацикливание этапов! Необходимо выбрать другой этап");
			Отказ=Истина;
		КонецЕсли;
		
	КонецЕсли;  // Если НЕ ОтменаРедактирования Тогда
	
КонецПроцедуры
