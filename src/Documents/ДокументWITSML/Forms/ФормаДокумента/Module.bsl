
&НаКлиенте
Процедура ЗагрузитьФайл(Команда)
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	ДиалогВыбораФайла.Заголовок = "Файл для загрузки";
	ОповещениеЗавершения = Новый ОписаниеОповещения("ВыборФайлаЗавершение", ЭтотОбъект);
	// Открываем окно выбора файла
	ДиалогВыбораФайла.Показать(ОповещениеЗавершения);
	
	//Если НЕ ДиалогВыбораФайла.Выбрать() Тогда
	//	Возврат;
	//КонецЕсли;    
	//
	//БылДобавленХотяБыОдинФайл = Ложь;
	////ДиалогВыбораФайла.ПолноеИмяФайла
	//Для каждого ВыбранныйФайл Из ДиалогВыбораФайла.ПолноеИмяФайла Цикл
	//	МассивВыбранныхФайлов = ДиалогВыбораФайла.ВыбранныеФайлы;
	//	ТекущийФайл = Новый ДвоичныеДанные(ВыбранныйФайл);
	//	ИмяФайла = СтрЗаменить(ВыбранныйФайл,ДиалогВыбораФайла.Каталог,"");
	//	ФайлПрикреплен = Истина;
	//	
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы <> Неопределено Тогда
		
		ПутьКФайлу = ВыбранныеФайлы[0];
		//ИмяФайлаWITSML		
		//ИмяФайла = "D:\IT_OIL_CHAMP\containers\Uploaded Files\bhaRUN1.xml";
		//МойXML = Новый ЧтениеXML;
		//МойXML.ОткрытьФайл(ПутьКФайлу);       
		Объект.ИмяФайлаWITSML = Прав(ПутьКФайлу,СтрДлина(ПутьКФайлу)-СтрНайти(ПутьКФайлу,"\",НаправлениеПоиска.СКонца));
		//ТипФабрики = ФабрикаXDTO.Тип("http://www.witsml.org/schemas/131","obj_bhaRuns");
		АдресВременногоФайла = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ПутьКФайлу));
		//ОбъектXDTOИзФайла = ФабрикаXDTO.ПрочитатьXML(МойXML, ТипФабрики);
		//ОбъектXDTO = Новый ХранилищеЗначения(ОбъектXDTOИзФайла);
		//МойXML.Закрыть();
		ПрочитатьXDTO(АдресВременногоФайла);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПрочитатьXDTO(АдресВременногоФайла)
	
	ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(АдресВременногоФайла);
	
	//СтрокаXML = ПолучитьСтрокуИзДвоичныхДанных(ДвоичныеДанныеФайла);
	//
	//ЧтениеXML = Новый ЧтениеXML;
	//
	//ЧтениеXML.УстановитьСтроку(СтрокаXML);       
	//ЧтениеXML.Прочитать();
	//ТипФабрики = ФабрикаXDTO.Тип("http://www.witsml.org/schemas/131","obj_bhaRuns");
	//ОбъектXDTO = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML, ТипФабрики);
	//ЧтениеXML.Закрыть();
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	
	ДокументОбъект.ФайлWITSML = Новый ХранилищеЗначения(ДвоичныеДанныеФайла);
	ДокументОбъект.ДатаЗагрузкиФайла = ТекущаяДатаСеанса();
	ДокументОбъект.Записать();
	
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	
	
КонецПроцедуры	

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	//ТекущийОбъект.ФайлWITSML = Новый ХранилищеЗначения(ФайлWITSML);
	//ТекущийОбъект.ОбъектXDTO = Новый ХранилищеЗначения(ОбъектXDTO);
	//ТекущийОбъект.ДатаЗагрузкиФайла = ДатаЗагрузкиФайла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьXML(Команда)
	ВыгрузитьXMLНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьXMLНаСервере()
	Если Не Объект.Проведен Тогда 
		ВызватьИсключение "Документ не проведен, выгрузка невозможна";
		
	КонецЕсли;
	
	ЗаписьXML = Новый ЗаписьXML;
	
	//ЗаписьXML.УстановитьСтроку();       
ЗаписьXML.ОткрытьФайл("D:\IT_OIL_CHAMP\1.xml");
	 ЗаписьXML.ЗаписатьОбъявлениеXML();
	//ТипФабрики = ФабрикаXDTO.Тип("http://www.witsml.org/schemas/131","obj_bhaRuns");

	//
	//ФабрикаXDTO.ЗаписатьXML(ЗаписьXML, ТипФабрики);

	Пакет = ФабрикаXDTO.Пакеты.Получить("http://www.witsml.org/schemas/131");
	
	ОбъектЗаписи = ФабрикаXDTO.Создать(Пакет.КорневыеСвойства[0].Тип);
	
	ТаблицаЗначенийПоДокументу = ПолучитьЗначенияПоДокументу(Объект.Ссылка);
	
	ЗаписатьЗначенияXDTO(ОбъектЗаписи,ТаблицаЗначенийПоДокументу,Строка(Объект.Ссылка.УникальныйИдентификатор()));
	
	Для Каждого КорневоеСвойство Из Пакет.КорневыеСвойства Цикл 
		ТекущееСвойство = Пакет.Получить(КорневоеСвойство.Тип.Имя);
	КонецЦикла;	
	
	ФабрикаXDTO.ЗаписатьXML(ЗаписьXML, ОбъектЗаписи);
	ЗаписьXML.Закрыть();
КонецПроцедуры

Функция ЗаписатьЗначенияXDTO(ОбъектXDTO,ТаблицаЗначенийПоДокументу,ИдентификаторРодителя)
	
	Если  ТипЗнч(ОбъектXDTO) = Тип("ОбъектXDTO") Тогда 
		Для Каждого СвойствоXDTO ИЗ ОбъектXDTO.Свойства() Цикл
			Если ТипЗнч(СвойствоXDTO.Тип) = Тип("ТипЗначенияXDTO") Тогда //СвойствоXDTO.Форма =  ФормаXML.Атрибут Тогда 
				НайденныеСтроки = ПолучитьСтрокуТаблицы(СвойствоXDTO.Имя,ИдентификаторРодителя,ТаблицаЗначенийПоДокументу);
				Если Не НайденныеСтроки = Неопределено Тогда 
					Если Не ЗначениеЗаполнено(НайденныеСтроки.Значение) И Не СвойствоXDTO.ВозможноПустое Тогда 
						//Может нужно заполнять, может и нет, но присвоение пустого падает с ошибкой
					Иначе 	 
						ОбъектXDTO[СвойствоXDTO.Имя] = НайденныеСтроки.Значение;
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли ТипЗнч(СвойствоXDTO.Тип) = Тип("ТипОбъектаXDTO") И ТипЗнч(ОбъектXDTO[СвойствоXDTO.Имя]) = Тип("СписокXDTO") Тогда 
				НайденныеСтроки = ПолучитьСтрокуТаблицы(СвойствоXDTO.Имя,ИдентификаторРодителя,ТаблицаЗначенийПоДокументу);
				Если Не НайденныеСтроки = Неопределено Тогда 
					ОбъектXDTO[СвойствоXDTO.Имя].Добавить(ЗаписатьЗначенияXDTO(ФабрикаXDTO.Создать(СвойствоXDTO.Тип), ТаблицаЗначенийПоДокументу,НайденныеСтроки.Идентификатор));
				КонецЕсли;	
				
			ИначеЕсли ТипЗнч(СвойствоXDTO.Тип) = Тип("ТипОбъектаXDTO") Тогда 
				НайденныеСтроки = ПолучитьСтрокуТаблицы(СвойствоXDTO.Имя,ИдентификаторРодителя,ТаблицаЗначенийПоДокументу);
				Если Не НайденныеСтроки = Неопределено Тогда 
 					ОбъектXDTO[СвойствоXDTO.Имя] = ЗаписатьЗначенияXDTO(ФабрикаXDTO.Создать(СвойствоXDTO.Тип), ТаблицаЗначенийПоДокументу,НайденныеСтроки.Идентификатор);
				КонецЕсли;
			КонецЕсли;	
			//	
			//		Если ТипЗнч(ОбъектXDTO[Ст.Имя]) = Тип("СписокXDTO") ИЛИ ТипЗнч(ОбъектXDTO[Ст.Имя]) = Тип("ОбъектXDTO") Тогда
			//			ЗаписатьЗначенияXDTO(ФабрикаXDTO.Создать(Ст.Тип), ТаблицаЗначенийПоДокументу,ИдентификаторРодителя);
			//		ИначеЕсли Ст.Форма = ФормаXML.Элемент Тогда // ИЛИ ТипЗнч(ОбъектXDTO[Ст.Имя]) = Тип("ОбъектXDTO") Тогда
			//			ОбъектXDTO[Ст.Имя] = ЗаписатьЗначенияXDTO(ФабрикаXDTO.Создать(Ст.Тип), ТаблицаЗначенийПоДокументу,ИдентификаторРодителя);
			//		Иначе
			//			ПараметрыОтбора = Новый Структура;
			//			ПараметрыОтбора.Вставить("ИдентификаторРодителя",ИдентификаторРодителя);
			//			ПараметрыОтбора.Вставить("ИмяПоля",Ст.Имя);
			//			НайденныеСтроки = ТаблицаЗначенийПоДокументу.НайтиСтроки(ПараметрыОтбора);
			//			Если НайденныеСтроки.Количество()=1 Тогда 
			//				ОбъектXDTO[Ст.Имя] = НайденныеСтроки[0].Значение;
			//			КонецЕсли;
			//		КонецЕсли;
			//	КонецЦикла;
		КонецЦикла;
		Возврат ОбъектXDTO;
	КонецЕсли;	
	
	
	
	
	
	//Если ТипЗнч(ОбъектXDTO) = Тип("СписокXDTO") Тогда 
	//	Для Каждого Ст ИЗ ОбъектXDTO Цикл
	//		Если ТипЗнч(Ст) = Тип("СписокXDTO") ИЛИ ТипЗнч(Ст) = Тип("ОбъектXDTO") Тогда
	//			ЗаписатьЗначенияXDTO(Ст, ТаблицаЗначенийПоДокументу,ИдентификаторРодителя);
	//		Иначе
	//			Строка.Значение = Ст;
	//		КонецЕсли;
	//	КонецЦикла;
	//Иначе
	//	Для Каждого Ст ИЗ ОбъектXDTO.Свойства() Цикл
	//	
	//		Если ТипЗнч(ОбъектXDTO[Ст.Имя]) = Тип("СписокXDTO") ИЛИ ТипЗнч(ОбъектXDTO[Ст.Имя]) = Тип("ОбъектXDTO") Тогда
	//			ЗаписатьЗначенияXDTO(ФабрикаXDTO.Создать(Ст.Тип), ТаблицаЗначенийПоДокументу,ИдентификаторРодителя);
	//		ИначеЕсли Ст.Форма = ФормаXML.Элемент Тогда // ИЛИ ТипЗнч(ОбъектXDTO[Ст.Имя]) = Тип("ОбъектXDTO") Тогда
	//			ОбъектXDTO[Ст.Имя] = ЗаписатьЗначенияXDTO(ФабрикаXDTO.Создать(Ст.Тип), ТаблицаЗначенийПоДокументу,ИдентификаторРодителя);
	//		Иначе
	//			ПараметрыОтбора = Новый Структура;
	//			ПараметрыОтбора.Вставить("ИдентификаторРодителя",ИдентификаторРодителя);
	//			ПараметрыОтбора.Вставить("ИмяПоля",Ст.Имя);
	//			НайденныеСтроки = ТаблицаЗначенийПоДокументу.НайтиСтроки(ПараметрыОтбора);
	//			Если НайденныеСтроки.Количество()=1 Тогда 
	//				ОбъектXDTO[Ст.Имя] = НайденныеСтроки[0].Значение;
	//			КонецЕсли;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Возврат ОбъектXDTO;
	//КонецЕсли;

КонецФункции	

Функция ПолучитьСтрокуТаблицы(ИмяПоля, ИдентификаторРодителя,ТаблицаЗначенийПоДокументу)	
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ИдентификаторРодителя",ИдентификаторРодителя);
	ПараметрыОтбора.Вставить("ИмяПоля", ИмяПоля);
	НайденныеСтроки = ТаблицаЗначенийПоДокументу.НайтиСтроки(ПараметрыОтбора);
	НайденныеСтроки = ТаблицаЗначенийПоДокументу.НайтиСтроки(ПараметрыОтбора);
	Если НайденныеСтроки.Количество()=1 Тогда 
		Возврат НайденныеСтроки[0]
	КонецЕсли;
КонецФункции

Функция ПолучитьЗначенияПоДокументу(Документ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗначенияWITSML.Период КАК Период,
		|	ЗначенияWITSML.Регистратор КАК Регистратор,
		|	ЗначенияWITSML.НомерСтроки КАК НомерСтроки,
		|	ЗначенияWITSML.Активность КАК Активность,
		|	ЗначенияWITSML.ИмяПоля КАК ИмяПоля,
		|	ЗначенияWITSML.Хэш КАК Хэш,
		|	ЗначенияWITSML.Идентификатор КАК Идентификатор,
		|	ЗначенияWITSML.ИдентификаторРодителя КАК ИдентификаторРодителя,
		|	ЗначенияWITSML.Атрибут КАК Атрибут,
		|	ЗначенияWITSML.Значение КАК Значение,
		|	ЗначенияWITSML.Единица КАК Единица
		|ИЗ
		|	РегистрСведений.ЗначенияWITSML КАК ЗначенияWITSML
		|ГДЕ
		|	ЗначенияWITSML.Регистратор = &Регистратор";
	
	Запрос.УстановитьПараметр("Регистратор", Документ);
	
	Возврат  Запрос.Выполнить().Выгрузить();
	
КонецФункции	