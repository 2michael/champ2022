
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	WITSML = ФайлWITSML.Получить();
	
	Если WITSML = Неопределено Тогда	
		ВызватьИсключение "Файл WITSML не был загружен, проведение невозможно";
	КонецЕсли;
	
	СтрокаXML = ПолучитьСтрокуИзДвоичныхДанных(ФайлWITSML.Получить());
	
	ЧтениеXML = Новый ЧтениеXML;
	
	ЧтениеXML.УстановитьСтроку(СтрокаXML);       
	ЧтениеXML.Прочитать();
	ТипФабрики = ФабрикаXDTO.Тип("http://www.witsml.org/schemas/131","obj_bhaRuns");
	//ДвоичныеДанныеФайла = Новый ДвоичныеДанные(ПутьКФайлу);
	ОбъектXDTO = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML, ТипФабрики);
	//ОбъектXDTO = Новый ХранилищеЗначения(ОбъектXDTOИзФайла);
	ЧтениеXML.Закрыть();
	
	//ДеревоЗначенийXDTO = Новый ДеревоЗначений;
	//ДеревоЗначенийXDTO.Колонки.Добавить("Узел");
	//ДеревоЗначенийXDTO.Колонки.Добавить("Элемент");
	//Строка = ДеревоЗначенийXDTO.Строки.Добавить();
	//Строка.Узел = "Корневой узел";
	
	
	
	Движения.ЗначенияWITSML.Записывать = Истина; 
	
	ПрочитатьУзел(ОбъектXDTO,Движения.ЗначенияWITSML,Строка(ЭтотОбъект.Ссылка.УникальныйИдентификатор()),ЭтотОбъект.Дата);
	//Движение = Движения.ЗначенияWITSML.Добавить();
	//Движение.Период = Дата;
	//Движение.ИмяПоля = Номер;
	//Движение.Хэш = ТипДокумента;

	//МД5 = ВычислитьMD5(WITSML);
	//Для Каждого Движение Из Движения Цикл 
	//	Движение.Период = ЭтотОбъект.Дата;	
	//КонецЦикла;	
	
	
КонецПроцедуры

Процедура ПрочитатьУзел(ОбъектXDTO,Движения,ИдентификаторРодителя,Период)
	
	Если ТипЗнч(ОбъектXDTO) = Тип("СписокXDTO") Тогда 
		Для Каждого Ст ИЗ ОбъектXDTO Цикл
			Строка = Движения.Добавить();
			Строка.ИмяПоля = ОбъектXDTO.ВладеющееСвойство;
			Строка.ИдентификаторРодителя = ИдентификаторРодителя;
			Строка.Идентификатор = Строка(Новый УникальныйИдентификатор());
			Строка.Период = Период;
			Если ТипЗнч(Ст) = Тип("СписокXDTO") ИЛИ ТипЗнч(Ст) = Тип("ОбъектXDTO") Тогда
				ПрочитатьУзел(Ст, Движения,Строка.Идентификатор,Период);
			Иначе
				Строка.Значение = Ст;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Для Каждого Ст ИЗ ОбъектXDTO.Свойства() Цикл
			//Строка = Движения.Добавить();
			//Строка.ИмяПоля = Ст.Имя;
			//Строка.ИдентификаторРодителя = ИдентификаторРодителя;
			//Строка.Идентификатор = Строка(Новый УникальныйИдентификатор());
			//Строка.Период = Период;
			
			Если ТипЗнч(ОбъектXDTO[Ст.Имя]) = Тип("СписокXDTO") Тогда 
				ПрочитатьУзел(ОбъектXDTO[Ст.Имя], Движения,ИдентификаторРодителя,Период);
			ИначеЕсли  ТипЗнч(ОбъектXDTO[Ст.Имя]) = Тип("ОбъектXDTO") Тогда
				Строка = Движения.Добавить();
			Строка.ИмяПоля = Ст.Имя;
			Строка.ИдентификаторРодителя = ИдентификаторРодителя;
			Строка.Идентификатор = Строка(Новый УникальныйИдентификатор());
			Строка.Период = Период;
				ПрочитатьУзел(ОбъектXDTO[Ст.Имя], Движения,Строка.Идентификатор,Период);
			Иначе
				Строка = Движения.Добавить();
			Строка.ИмяПоля = Ст.Имя;
			Строка.ИдентификаторРодителя = ИдентификаторРодителя;
			Строка.Идентификатор = Строка(Новый УникальныйИдентификатор());
			Строка.Период = Период;
				Строка.Значение = ОбъектXDTO[Ст.Имя];
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Функция ВычислитьMD5(Данные) Экспорт
	
	ХэшированиеДанных = Новый ХешированиеДанных(ХешФункция.MD5);
	ХэшированиеДанных.Добавить(Данные);
	Хэш = НРег(СтрЗаменить(ХэшированиеДанных.ХешСумма, " ", ""));
	
	Возврат Хэш;
	
КонецФункции

Процедура ОбработкаПроведения2(Отказ, РежимПроведения)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	// регистр ЗначенияWITSML
	Движения.ЗначенияWITSML.Записывать = Истина;
	Движение = Движения.ЗначенияWITSML.Добавить();
	Движение.Период = Дата;
	Движение.ИмяПоля = Номер;
	Движение.Хэш = ТипДокумента;

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры
